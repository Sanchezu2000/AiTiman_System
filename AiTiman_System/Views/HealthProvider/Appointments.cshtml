@{
    ViewData["Title"] = "Book Appointment";
    Layout = "~/Views/Shared/_HealthProviderLayoutcshtml.cshtml";
 }
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f6f9;
            color: #333;
        }

        .container {
            display: flex;
            justify-content: space-between;
            gap: 20px;
            max-width: 1200px;
            margin: auto;
            padding: 20px;
            box-sizing: border-box;
        }

        .form-container, .calendar-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .form-container {
            flex: 1;
            max-width: 600px;
        }

        .calendar-container {
            width: 100%;
            max-width: 450px;
        }

        label {
            display: block;
            margin: 10px 0 5px;
            font-weight: bold;
        }

        input[type="text"], input[type="date"], input[type="time"], select, textarea {
            width: 100%;
            padding: 12px;
            margin-bottom: 10px;
            border: 1px solid #e0e0e0;
            border-radius: 5px;
            box-sizing: border-box;
        }

        input[type="submit"], button {
            width: 100%;
            padding: 15px;
            background: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }

            input[type="submit"]:hover, button:hover {
                background: #0056b3;
            }

        /* Calendar Style */
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .calendar-day {
            padding: 15px;
            background: #ffffff;
            text-align: center;
            border: 1px solid #e0e0e0;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
            font-weight: bold;
            font-size: 14px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .calendar-day.available {
                background-color: #28a745; /* Green for available */
                color: #fff;
            }

            .calendar-day.ongoing {
                background-color: #dc3545; /* Red for ongoing */
                color: #fff;
            }

            .calendar-day.completed {
                background-color: #ffc107; /* Yellow for completed */
                color: #fff;
            }

            .calendar-day:hover {
                background-color: #17a2b8;
                color: #fff;
            }

            .calendar-day.selected {
                background-color: #007bff;
                color: #fff;
            }

        .calendar-header {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 10px;
        }

            .calendar-header div {
                padding: 10px;
                background-color: #f1f1f1;
                border-radius: 5px;
            }

        .calendar-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .calendar-navigation button {
                background: #007bff;
                color: #fff;
                border: none;
                padding: 10px 20px;
                cursor: pointer;
                border-radius: 5px;
                font-size: 16px;
            }

                .calendar-navigation button:hover {
                    background: #0056b3;
                }

        .blank-day {
            visibility: hidden;
        }
    </style>
</head>
<body>
    <div class="content-body">
        <div class="container">
            <!-- Left Side: Appointment Form -->
            <div class="form-container">
                <h3>Appointment Details</h3>
                <form id="appointment-form" >
                    <label for="appointment-type">Appointment Type:</label>
                    <select id="appointment-type" name="AppointmentType" required>
                        <option value="Consultation">Consultation</option>
                        <option value="Follow-up">Follow-up</option>
                        <option value="Teeth Check-up">Teeth Check-up</option>
                    </select>

                    <label for="schedule-date">Schedule Date:</label>
                    <input type="date" id="schedule-date" name="ScheduleDate" required>

                    <label for="schedule-time">Schedule Time:</label>
                    <input type="time" id="schedule-time" name="ScheduleTime" required>

                    <label for="number-of-slots">Number of Slots:</label>
                    <input type="number" id="number-of-slots" name="NumberOfSlots" required>

                    <label for="appointment-status">Appointment Status:</label>
                    <select id="appointment-status" name="AppointmentStatus" required>
                        <option value="Available">Available</option>
                        <option value="Ongoing">Ongoing</option>
                        <option value="Completed">Completed</option>
                    </select>

                    <label for="doctor-in-charge">Doctor in Charge:</label>
                    <input type="text" id="doctor-in-charge" name="DoctorInCharge" required>

                    <button type="submit">Submit Booking</button>
                </form>

            </div>

            <!-- Right Side: Calendar Picker -->
            <div class="calendar-container">
                <h3>Select Available Slot</h3>
                <div class="calendar-navigation">
                    <button id="prev-month">&lt;</button>
                    <span id="month-year">September 2024</span>
                    <button id="next-month">&gt;</button>
                </div>
                <div class="calendar" id="calendar">
                    <div class="calendar-header">
                        <div>Sun</div>
                        <div>Mon</div>
                        <div>Tue</div>
                        <div>Wed</div>
                        <div>Thu</div>
                        <div>Fri</div>
                        <div>Sat</div>
                    </div>
                    <!-- Calendar days will be dynamically generated here -->
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarElement = document.getElementById('calendar');
            const monthYearElement = document.getElementById('month-year');
            const prevMonthButton = document.getElementById('prev-month');
            const nextMonthButton = document.getElementById('next-month');

            let currentDate = new Date();

            // Mock data for appointments
            const appointments = {
                '2024-09-01': {
                    doctor: 'Dr. John Doe',
                    time: '10:00',
                    slots: 5,
                    status: 'Available'
                },
                '2024-09-02': {
                    doctor: 'Dr. Alice Smith',
                    time: '14:00',
                    slots: 3,
                    status: 'Ongoing'
                },
                '2024-09-03': {
                    doctor: 'Dr. Robert Lee',
                    time: '09:00',
                    slots: 0,
                    status: 'Completed'
                }
                // Add more mock appointments as needed
            };

            function generateCalendar(date) {
                const year = date.getFullYear();
                const month = date.getMonth();

                const firstDay = new Date(year, month, 1).getDay();
                const lastDate = new Date(year, month + 1, 0).getDate();

                const calendarHTML = [];

                // Blank days before the first day of the month
                for (let i = 0; i < firstDay; i++) {
                    calendarHTML.push('<div class="blank-day"></div>');
                }

                // Days of the month
                for (let day = 1; day <= lastDate; day++) {
                    const dateStr = ${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')};
                    const status = getStatusForDate(dateStr); // Get status for the date

                    calendarHTML.push(
                        <div class="calendar-day ${status}" data-date="${dateStr}">
                                ${day}
                            </div>
                    );
                }

                calendarElement.innerHTML = calendarHTML.join('');
                monthYearElement.textContent = ${date.toLocaleString('default', { month: 'long' })} ${year};

                document.querySelectorAll('.calendar-day').forEach(day => {
                    day.addEventListener('click', function () {
                        document.querySelectorAll('.calendar-day').forEach(day => day.classList.remove('selected'));
                        this.classList.add('selected');
                        populateAppointmentDetails(this);
                    });
                });
            }

            function getStatusForDate(dateStr) {
                const statuses = {
                    '2024-09-01': 'available',
                    '2024-09-02': 'ongoing',
                    '2024-09-03': 'completed',
                    // Add other dates and their statuses here
                };
                return statuses[dateStr] || '';
            }

            function populateAppointmentDetails(dayElement) {
                const date = dayElement.getAttribute('data-date');
                const appointment = appointments[date];

                if (appointment) {
                    document.getElementById('schedule-date').value = date;
                    document.getElementById('schedule-time').value = appointment.time;
                    document.getElementById('number-of-slots').value = appointment.slots;
                    document.getElementById('appointment-status').value = appointment.status;
                    document.getElementById('doctor-in-charge').value = appointment.doctor;
                } else {
                    // If no appointment data, clear the form
                    document.getElementById('schedule-date').value = date;
                    document.getElementById('schedule-time').value = '';
                    document.getElementById('number-of-slots').value = '';
                    document.getElementById('appointment-status').value = '';
                    document.getElementById('doctor-in-charge').value = '';
                }
            }

            prevMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() - 1);
                generateCalendar(currentDate);
            });

            nextMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() + 1);
                generateCalendar(currentDate);
            });

            generateCalendar(currentDate);
        });
    </script>

</body>
</html> 